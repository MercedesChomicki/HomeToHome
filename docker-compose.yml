version: '3.8'

services:
  mongo-db:
    image: mongo
    container_name: mongo-db
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin123
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d/
    networks:
      - internal

  user-postgres:
    image: postgres:13
    container_name: user-postgres
    environment:
      - POSTGRES_DB=${USER_POSTGRES_DB}
      - POSTGRES_USER=${USER_POSTGRES_USER}
      - POSTGRES_PASSWORD=${USER_POSTGRES_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - user_postgres_data:/var/lib/postgresql/data
    networks:
      - internal

  pet-postgres:
    image: postgres:13
    container_name: pet-postgres
    environment:
      - POSTGRES_DB=${PET_POSTGRES_DB}
      - POSTGRES_USER=${PET_POSTGRES_USER}
      - POSTGRES_PASSWORD=${PET_POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pet_postgres_data:/var/lib/postgresql/data
    networks:
      - internal

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=${USER_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${USER_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${USER_DATASOURCE_PASSWORD}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
      - SPRING_CLOUD_CONFIG_URI=${SPRING_CLOUD_CONFIG_URI}
    depends_on:
      - user-postgres
      - config-server
      - eureka-server
    networks:
      - internal

  pet-service:
    build: ./pet-service
    container_name: pet-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_DATASOURCE_URL=${PET_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${PET_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${PET_DATASOURCE_PASSWORD}
      - USER_SERVICE_URL=${USER_SERVICE_URL}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
      - SPRING_CLOUD_CONFIG_URI=${SPRING_CLOUD_CONFIG_URI}
    depends_on:
      - pet-postgres
      - user-service
      - config-server
      - eureka-server
    networks:
      - internal

  chat-service:
    build:
      context: ./chat-service
      dockerfile: Dockerfile
    container_name: chat-service
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
      - SPRING_CLOUD_CONFIG_URI=${SPRING_CLOUD_CONFIG_URI}
      - CHAT_DATASOURCE_URL=${CHAT_DATASOURCE_URL}
    depends_on:
      - mongo-db
      - eureka-server
      - config-server
    networks:
      - internal

  config-server:
    build: ./config-server
    container_name: config-server
    ports:
      - "8888:8888"
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - GIT_URI=${GIT_URI}
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
    networks:
      - internal

  gateway-server:
    build: ./gateway-server
    container_name: gateway-server
    ports:
      - "8089:8089"
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
      - SPRING_CLOUD_CONFIG_URI=${SPRING_CLOUD_CONFIG_URI}
    depends_on:
      - config-server
      - eureka-server
    networks:
      - internal
  
  eureka-server:
    build: ./eureka-server
    container_name: eureka-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
    networks:
      - internal
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8761/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mongo_data:
  user_postgres_data:
  pet_postgres_data:

networks:
  internal:
    driver: bridge